케스케이드 레이어는 여러 소스의 CSS로 작업할 때, 충돌하는 CSS 선택기 및
경쟁하는 특수성이 있는 경우 또는 !important 플래그를 사용할 때 가장 관련이 있다.

사이트의 복잡도가 증가함에 따라 스타일시트의 수가 증가하여
스타일시트의 소스 순서가 더 중요하고 복잡해진다.
캐스케이드 레이어는 이러한 코드기반에서 스타일시트 유지 관리를 단순화한다.

웹 개발자는 특수성과 싸울 필요 없이 CSS 색션의 우선 순위를 지정할 수 있다.

@layer page {
  h1 {
    text-decoration: overline; 
    color: red;
  }
}

@layer site { // 설정됨
  h1 {
    text-decoration: underline; 
    color: green;
  }
}

/* this does nothing */
@layer site, page;


@media (min-width: 50em) {
  @layer site;
}

@layer page {
  h1 {
    text-decoration: overline; 
    color: red;
  }
}

@layer site {
  h1 {
    text-decoration: underline; 
    color: green;
  }
}


@import를 사용하면 사용자가 다른 스타일시트의 스타일 규칙을 CSS 파일이나
style 요소로 직접 가져올 수 있다.

@import url("components-lib.css") layer(components);
@import url("dialog.css") layer(components.dialog);
@import url("marketing.css") layer();

@import url(comments.css) layer(social);
@import url(sm-icons.css) layer(social);

@import url("ruby-narrow.css") layer(international) supports(display: ruby) and
  (width < 32rem);
@import url("ruby-wide.css") layer(international) supports(display: ruby) and
  (width >= 32rem);


중첩 레이어
중첩 레이어는 명명된 레이어 또는 익명 레이어 내에 있는 레이어이다.
다른 레이어로 가져온 레이어는 해당 레이어 내에서 중첩된 레이어가 된다.

중첩 레이어의 장점
레이어를 중첩하는 기능을 통해 팀은 다른 팀이 레이어로 가져올지 여부에 대한
걱정 없이 계단식 레이어를 만들 수 있다. 마찬가지로 중첩을 사용하면 타사 스타일시트를
해당 스타일시트 자체에 레이어가 있는지 여부에 대한 걱정 없이 레이어로 가져올 수 있다.

레이어를 중첩할 수 있으므로 외부 스타일시트와 내부 스타일시트 간에 레이어 이름이
충돌하는 것에 대해 걱정할 필요가 없다.

@import url(layers1.css) layer(example);

@layer example.layout {
  main {
    width: 50vw;
  }
}


@layer A, B; 

  h1 { 
    color: orange;
    background-color: green; 
    text-decoration: overline pink !important; 
    box-shadow: 5px 5px lightgreen !important;
  }
  
  @layer A {
    h1 {
      color: grey; 
      background-color: black !important;
      text-decoration: line-through grey; 
      box-shadow: -5px -5px lightblue !important;
      font-style: normal;
      font-weight: normal !important;
    }
  }
  @layer B {
    h1 { 
      color: aqua;
      background: yellow !important;
      text-decoration: underline aqua;
      box-shadow: -5px 5px magenta !important;
      font-style: italic;
      font-weight: bold !important;
    }
  }

<div>
  <h1 style="color: yellow; background-color: maroon !important;">Inline styles</h1>
</div>