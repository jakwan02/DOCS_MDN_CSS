CSS 미디어 쿼리를 사용하면 브라우저 및 디바치스 환경이 지정된 규칙과
일치하는 경우에만 CSS를 사용할 수 있다.

미디어 쿼리 기본 사항
@media media-type and (media-feature-rule) {
  /* CSS rules go here */
}
미디어 유형, 규칙, 적용되는 CSS 규칙 집합

지정할 수 있는 미디어 유형은 다음과 같다.
all
print
screen


미디어 기능 규칙
유형을 지정한 후 규칙을 사용하여 미디어 기능을 대상으로 지정할 수 있다.

너비와 높이
max-width: 600px  // 뷰포트가 600px 이하인 경우

방향
세로 모드 또는 가로모드
orientation: landscape  // 가로모드일 경우

포인팅 장치 사용
hover: hover  // 요소 이로 마우스를 가져갈 경우


더 복잡한 미디어 쿼리
가능한 모든 미디어 쿼리를 사용하여 이들을 결합하거나 쿼리 목록을 만들 수 있다.

미디어 쿼리의 and 논리
@media screen and (min-width: 600px) and (orientation: landscape) {}
// 뷰포트 너비가 600px 이상이고 가로모드일 경우

미디어 쿼리의 or 논리
@media screen and (min-width: 600px), screen and (orientation: landscape) {}
// 쿼리 집합이 있는 경우 쉼표로 구분할 수 있다.

미디어 쿼리의 not 논리
@media not all and (orientation: landscape) {}
// 전체 미디어 쿼리의 의미가 반전된다. 세로 모드일 경우


중단점을 선택하는 방법
반응형 디자인 초기에는 많은 디자이너가 매우 구체적인 화면 크기를 대상으로
하려고 했다. 이제는 크기가 너무 다양하여 실현 가능하지 않은 장치가 너무 많다.

이 접근 방식은 사용 중인 장치의 정확한 치수가 무엇이든 상관없으며 모든 범위가
충족된다는 것을 의미. 미디어 쿼리가 도입되는 지점을 중단점이라고 한다.


모바일 우선 반응형 디자인
대체로 반응형 디자인에 대해 두 가지 접근 방식을 취할 수 있다.
바탕화면 또는 가장 넓은 보기로 시작한 다음 중단점을 추가하여 뷰포트가 작아짐에
따라 이동하거나 가장 작은 보기에서 시작하여 뷰포트가 커짐에 따라 레이아웃을 추가.

두 번째 접근 방식은 모바일 우선 반응형 디자인으로 설명되며 따라야할 가장 좋은 접근 방식인 경우가 많다.

@media screen and (min-width: 40em) {
  article {
    display: grid;
    grid-template-columns: 3fr 1fr;
    column-gap: 20px;
  }

  nav ul {
    display: flex;
  }

  nav li {
    flex: 1;
  }
}

@media screen and (min-width: 70em) {
  main {
    display: grid;
    grid-template-columns: 3fr 1fr;
    column-gap: 20px;
  }

  article {
    margin-bottom: 0;
  }

  footer {
    border-top: 1px solid #ccc;
    margin-top: 2em;
  }
}
너비를 계속 확장.


뷰포트 메타 태그
<meta name="viewport" content="width=device-width,initial-scale=1" />

모바일 브라우저가 콘텐츠를 렌더링하는 방법을 제어하는 방법.
기본적으로 대부분의 모바일 브라우저는 뷰포트 너비에 대해 거짓말하기 때문에 필요하다.

모바일 브라우저는 기본적으로 실제 기기 너비보다 넓은 뷰포트 너비(일반적으로 980px)로
사이트를 렌더링한 다음 렌더링된 결과를 축소하여 디스플레이에 맞춘다.

하지만 이는 반응형 사이트가 예상대로 작동하지 않을 것이다.
이 문제를 해결하기 위해 위와 같은 뷰포트 메타 태그를 포함하면 브라우저에
"980 픽셀 뷰포트로 콘텐츠를 렌더링하지 말고 실제 장치 너비를 사용하여 렌더링하고
더 나은 일관성을 위해 기본 초기 배율 수준을 설정하십시오"


미디어 쿼리가 정말 필요한가?
Flexbox, Grid 레이아웃에서 minmax() 함수로 화면의 크기에 따라 열 트랙 수를
변경할 수 있다. 

이 방법의 좋은 점은 그리드가 뷰포트 너비를 보는 것이 아니라 이 구성 요소에 
사용할 수 있는 너비를 본다는 것이다.
미디어 쿼리에 대한 섹션을 전혀 필요하지 않을 수도 있다.

하지만 실제로는 미디어 쿼리로 향상된 최신 레이아웃 방법을 잘 사용하면
최상의 결과를 얻을 수 있다.