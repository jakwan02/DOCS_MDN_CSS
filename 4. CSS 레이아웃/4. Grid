CSS Grid 레이아웃은 웹용 2차원 레이아웃 시스템이다.
콘텐츠를 row와 column에 배치할 수 있다.

그리드 레이아웃이란?
수평선과 수직선의 모음으로 디자인 요소를 정렬할 수 있는 패턴을 만든다.

page to page로 이동할 떼 el이 움직이거나 width를 변경하지 않는 레이아웃을
만드는데 도움이되어 웹사이트에서 더 큰 일관성을 제공한다.

그리드에는 일반적으로 행, 열 및 각 행과 열 사이의 간격이 있다.


그리드 정의
display: grid
컨테이너의 모든 직계 자식은 그리드 항목이 된다.

선언하면 하나의 column 그리드가 제공되므로 항목은 정상적인 흐름에서와
마찬가지로 다른 항목 아래에 계속 표시된다.

grid-template-columns: 200px 200px 200px;
다음을 추가하면 그리드처럼 보인다. 길이, 단위 또는 백분율을 사용.


fr 장치가 있는 유연한 그리드
fr 단위는 그리드 컨테이너에서 사용 가능한 공간의 항 부분을 나타내므로
그리드 행과 열의 크기를 유연하게 조정할 수 있다.

grid-template-columns: 1fr 1fr 1fr;
세 개의 트랙을 만든다.
fr 단위는 공간을 비례적으로 분배한다.

fr 단위는 모든 공간이 아닌 사용 가능한 공간을 분배하기 때문에 트랙 중
하나에 내부에 큰 것이 있으면 공유할 여유 공간이 줄어든다.


트랙 사이의 간격
- 열 간격
- 행 간격
- 갭(열 간격과 행 간격 둘다의 약어)

gap: 20px;
이러한 간격은 길이 단위 또는 백분율일 수 있지만 fr은 아니다.

코드를 더욱 안전하게 만들려면 두 속성을 모두 추가
grid-gap: 20px
gap: 20px


트랙 목록 반복
CSS 함수를 사용하여 트랙 목록의 전체 또는 섹션만 반복할 수 있다.

grid-template-columns: repeat(3, 1fr)
함수의 첫 번째 인수로는 목록을 반복할 횟수를 지정하고, 두 번째 인수는
반복할 하나 이상의 트랙 목록이다.


암시적 및 명시적 그리드
지금까지는 열 트랙만 지정했지만 콘텐츠를 보관하기 위해 행이 만들어지고 있다.

명시적 그리드: grid-template-rows, grid-template-columns
암시적 그리드: 콘텐츠가 해당 그리드 외부에 배치될 떼 정의된 명시적
그리드를 확장한다.

암시적 그리드 트랙에 크기를 지정하려는 경우 grid-auto-rows 및
grid-template-columns 속성을 사용한다.

grid-auto-rows: 100px;  // 생성된 행의 높이가 100px


minmax() 함수
100px 높이의 트랙에 100px보다 큰 콘텐츠를 추가하면 그다지 유용하지 않으며,
overflow가 발생한다.

minmax() 함수를 사용하면 트랙의 최소 및 최대 크기를 설정할 수 있다.

grid-auto-rows: minmax(100px, auto);  // 최소 크기는 100px이지만
최대 크기는 더 많은 콘텐츠를 수용할 수 있도록 확장된다.


가능한 많은 열
grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
grid-auto-rows: minmax(100px, auto);


라인 기반 배치
그리드에는 항상 선이 있다. 1부터 번호가 매겨지며 문서의 writing-mode와
관련 있다. 영어의 열 1은 그리드의 왼쪽, 행 1은 맨 위에 있다.

시작 줄과 끝 줄을 지정하여 item을 정렬할 수 있다.
- grid-column-start
- grid-column-end
- grid-row-start
- grid-row-end

단축 속성을 사용할 수도 있다.
- grid-column
- grid-row

grid-column: 1 / 3; // 1~3번째 줄, 1~2 열에 배치
grid-row: 1;  // 1번째 줄, 1행에 배치


grid-template-areas를 사용한 포지셔닝
그리드에 항목을 정렬하는 또 다른 방법은 grid-template-areas 속성을
사용하고 디자인의 다양한 요소에 이름을 지정하는 것이다.

.container {
  display: grid;
  grid-template-areas:
    "header header"
    "sidebar content"
    "footer footer";
  grid-template-columns: 1fr 3fr;
  gap: 20px;
}

header {
  grid-area: header;
}

article {
  grid-area: content;
}

aside {
  grid-area: sidebar;
}

footer {
  grid-area: footer;
}

grid-template-areas에 대한 규칙은 다음과 같다.
- 그리드의 모든 셀을 채워야 한다.
- 두 셀에 걸쳐 확장하려면 이름을 반복한다.
- 셀을 비워 두려면 마침표를 사용한다.
- 영역은 직사각형이어야 한다.(L자형 영역을 가질 수 없음)
- 다른 위치에서 영역을 반복할 수 없다.


CSS 그리드의 그리드 프레임워크
Grid Framework는 12열 또는 16열 그리드를 기반으로 하는 경향이 있다.
CSS Grid를 사용하면 이러한 프레임워크를 제공하기 위해 타사 도구가 필요하지 않는다.

.container {
  display: grid;
  grid-template-areas:
    "header header"
    "sidebar content"
    "footer footer";
  grid-template-columns: 1fr 3fr;
  gap: 20px;
}

header {
  grid-area: header;
}

article {
  grid-area: content;
}

aside {
  grid-area: sidebar;
}

footer {
  grid-area: footer;
}
이제 선 기반 배치를 사용하여 콘텐츠를 12열 그리드에 배치할 수 있다.

