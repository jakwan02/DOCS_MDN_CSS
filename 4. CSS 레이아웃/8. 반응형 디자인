반응형 웹 디자인(RWD)은 웹 페이지가 모든 화면 크기와 해상도에서
잘 렌더링되도록 하는 동시에 우수한 사용성을 보장하는 웹 디자인 접근 방식.

HTML은 기본적으로 반응형이거나 유동적이다. CSS 없이 HTML만 포함된 웹 페이지를
만들고 창 크기를 조정하면 뷰포트에 맞게 텍스트를 자동으로 재배치한다.

반응형 웹 디자인은 별도의 기술이 아니라 접근 방식이다.
콘텐츠를 보는데 사용되는 모든 장치에 응답할 수 있는 레이아웃을 만드는데
사용되는 인련의 모법 사례를 설명하는데 설명되는 용어이다.

2010 당시 레이아웃 및 미디어 쿼리에 CSS를 사용하여 브라우저 너비를 쿼리하고
다양한 중단점에 대한 레이아웃을 만들어 RWD을 만들었다.


미디어 쿼리
media query를 사용하면 일련의 테스트(사용자 화면이 특정 해상도보다 큰지 여부)를
실행하고 CSS를 선택적으로 적용하여 사용자의 요구에 맞게 페이지 스타일을 지정할 수 있다.

예를 들어 다음 미디어 쿼리는 현재 웹 페이지가 화면 미디어로 표시되고 뷰포트가
최소한 너비인지 확인한다. 선택기의 CSS는 두 가지가 참일 경우 적용된다.
@media screen and (min-width: 80rem) {
  .container {
    margin: 1em 2em;
  }
}

미디어 쿼리가 도입되고 레이아웃이 변경되는 지점을 중단점(break point)이라고 한다.

미디어 쿼리를 사용할 때 일반적인 접근 방식은 좁은 화면 디바이스에 대한 간단한
단일 열 레이아웃을 만든 다음 더 넓은 화면을 확인하고 이를 처리할 수 있는 충분한
화면 너비가 있다는 것을 알고 있을 때 다중 열 레이아웃을 구현하는 것이다.
이를 모바일 퍼스트 디자인이라고 한다.

중단점을 사용하는 경우 가장 좋은 방법은 개별 장치의 절대 크기가 아닌 상대 단위로
미디어 쿼리 중단점을 정의하는 것이다. (em, rem, vw)

미디어 쿼리는 RWD에 도움이 될 수 있지만 필수 사항은 아니다.
유연한 그리드, 상대 단위, 최소 및 최대 단위 값은 쿼리 없이 사용할 수 있다.



반응형 레이아웃 기술
반응형 사이트는 유연한 그리드를 기반으로 구축되므로 픽셀 퍼펙트 레이아웃으로
가능한 모든 기기 크기를 타겟팅할 필요가 없다.

유연한 그리드를 사용하면 기능을 변경하거나 중단점을 추가하고 콘텐츠가 나빠 보이기
시작하는 지점에서 디자인을 변경할 수 있다.

다중 열 레이아웃, 플렉스박스, 그리드를 포함한 여러 레이아웃 방법은 기본적으로 반응형이다.


멀티콜
multicol을 사용하면 a를 지정하여 콘텐츠를 분할할 최대 열 수를 나타낸다.
그런 다음 브라우저는 화면 크기에 따라 변경되는 크기를 계산한다.

.container {
  column-count: 3;
}

대신 width를 지정하면 최소 너비가 지정된다.
.container {
  column-width: 10em;
}

축약형을 사용하여 최대 열 개수와 최소 열 너비를 지정할 수 있다.
이렇게 하면 화면 크기가 줄어들 때 길이가 너무 좁아지거나 화면 크기가 커질 때
줄 길이가 길어지는 것을 방지할 수 있다.


Flexbox
플렉스 항목은 컨테이너의 공간에 따라 항목 사이에 공간을 분배.
flex-grow, flex-shrink 값을 변경하여 항목 주위에 더 많거나 적은 공간이
있을 때 항목이 어떻게 동작할지 나타낼 수 있다.


CSS Grid
그리드 트랙에 사용 가능한 공간을 분배할 수 있다.


반응형 이미지
미디어가 반응형 컨테이너보다 크지 않도록 하려면 다음 방법을 사용할 수 있다.
img,
picture,
video {
  max-width: 100%;
}

이렇게 하면 컨테이너가 오버플로되지 않도록 미디어의 크기를 조정한다.
하나의 큰 이미지를 사용하고 작은 장치에 맞게 축소하면 필요한 것보다 큰
이미지를 다운로드하여 대역폭이 낭비된다.

반응형 이미지에서 picture 요소와 srcset, sizes 특성을 사용하면 사용자의
뷰포트와 기기의 해상도를 대상으로 하는 이미지를 제공할 수 있다.
이를 함께 사용하면 미디어 쿼리로 이미지 크기를 조정할 필요가 없다.


반응형 타이포그래피
미디어 쿼리 내에서 글꼴 크기를 변경하거나 뷰포트 단위를 사용하여
더 적거나 더 많은 양의 화면 공간을 반영하는 것을 설명한다.

@media (min-width: 1200px) {
  h1 {
    font-size: 4rem;
  }
}

반응형 타이포그래피를 위한 뷰포트 단위 사용
뷰포트 단위를 사용하면 미디어 쿼리로 중단점을 설정할 필요없이 반응형
타이포그래피를 사용할 수도 있다. 
h1 {
  font-size: 6vw;
}
위 작업을 수행할 때 문제는 해당 텍스트가 항상 뷰포트의 크기와 관련되어
있기 때문에 사용자가 단위를 사용하여 설정된 텍스트를 확대/축소할 수 있는
기능을 잃는다는 것이다.

따라서 뷰포트 단위만 사용하여 문자를 설정해서는 안된다.

해결책이 있으며 calc()를 사용하는 것이 포함된다.
vw 또는 em과 같은 고정 크기를 사용하여 설정된 값에 단위를 추가하면
텍스트를 계속 확대/축소할 수 있다.
h1 {
  font-size: calc(1.5rem + 3vw);
}


뷰포트 메타 태그
반응형 페이지의 HTML 소스를 보면 일반적으로 문서에 다음과 같은 meta 태그가 표시된다.
<meta name="viewport" content="width=device-width,initial-scale=1" />

이 메타태그는 모바일 브라우저에 뷰포트의 너비를 기기 너비로 설정하고
문서를 의도한 크기의 100%로 조정하여 의도한 모바일 최적화 크기로 문서를
표시하도록 지시한다.

왜 이것이 필요할까? 모바일 브라우저는 뷰포트 너비에 대해 거짓말 하는 경향이 있기 때문.

이 메타 태그는 스마트폰이 처음 출시되었을 때 대부분의 사이트가 모바일에 최적화되지
않았기 때문에 존재한다. 
메타 태그를 설정하면 모바일 장치의 기본값을 장치의 실제 너비로 재정의한다.

그렇지 않으면 중단점과 미디어 쿼리가 있는 반응형 디자인이 모바일 브라우저에서 의도한 대상으로
작동하지 않을 수 있다.

따라서 항상 문서 헤드에 뷰포트 메타 태그를 포함해야 한다.